<?xml version="1.0" encoding="UTF-8"?>
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!--   Copyright (c) 2011                                                                                               -->
<!--   Michael Barbieri, Christopher Haines, James Pence, Dale Scheppler, Nicholas Skaggs, Stephen V. Williams          -->
<!--   All rights reserved. This program and the accompanying materials                                                 -->
<!--   are made available under the terms of the new BSD license                                                        -->
<!--   which accompanies this distribution, and is available at                                                         -->
<!--   http://www.opensource.org/licenses/bsd-license.html                                                              -->
  
<!--   Contributors: Initial API and implementation                                                                     -->
<!--       Michael Barbieri, Christopher Haines, James Pence, Dale Scheppler, Nicholas Skaggs, Stephen V. Williams      -->

<!--  = = = = =                                                                                              = = = = =  -->
<!-- JDBCFetch - Gathers information from a database and places it within a given RecordHandler organized according     -->
<!--        to how the data is arranged within the chosen database.                                                     -->
<!-- ======                                                                                                             -->
<!-- Connection with different types of databases is essential to effectively populating a VIVO instance with viable    -->
<!--     data. Java Database Connectivity is available and flexible, while allowing standard SQL queries to retrieve    -->
<!--     the information from the chosen database.                                                                      --> 
<!-- ===== PARAMETERS =====                                                                                             -->
<!-- The source relational database information:                                                                        -->
<!--                                                                                                                    -->
<!-- driver - A JDBC driver is a java class which handles the interface between the program and a given database.       -->
<!--     The driver needs to exist within the classpath, for the program to be able to use it.                          -->
<!--     example value =  org.h2.Driver                                                                                 -->
<!--                                                                                                                    -->
<!-- connection - JDBC uses a connection string related to the Driver being used.                                       -->
<!--    It is in the general format : "jdbc:somejdbcvendor:other data needed"                                           -->
<!--    Specifically the harvester tends to use :                                                                       -->
<!--     "jdbc:jtds:sqlserver://127.0.0.1:8080/databasename" for a Microsoft SQL server                                 -->
<!--     "jdbc:h2:directory/location" for an H2 database ( http://www.h2database.com )                                  -->
<!--                                                                                                                    -->
<!--  username - A valid login with proper permissions                                                                  -->
<!--  password - The associated secure password                                                                         -->
<!--   These are what the fetch uses when accessing the given database. These must be valid otherwise the harvest run   -->
<!--  will not have access to the database. By default we use "sa" for system administrator and a blank password.       -->                                                                                                                -->
<!--                                                                                                                    -->
<!--                                                                                                                    -->
<!--                                                                                                                    -->
<!--  -->
<Config>
    <source>
		<driver>org.h2.Driver</driver>
		<connection>jdbc:h2:harvested-data/default/h2/store</connection>
		<username>sa</username>
		<password></password>
    </source>
    <table name="people">
		<id>UID</id>
    	<query>
SELECT 
	emp.person_id AS UID, 
	emp.first_name AS FNAME, 
	emp.last_name AS LNAME, 
	emp.middle_name AS MNAME, 
	emp.prefix_name AS PRENAME, 
	emp.suffix_name AS SUFNAME, 
	emp.full_name AS FULLNAME, 
	emp.official_name AS BUSNAME, 
	emp.pref_title AS TITLE, 
	emp.email_address AS EMAIL, 
	emp.work_phone AS PHONE, 
	emp.work_fax AS FAX, 
	login.login_name AS NETID 
FROM person AS emp 
LEFT JOIN user AS login ON 
	emp.person_id = login.person_id AND login.expired = 0 
WHERE 
	emp.publish_ok = 1<!-- - -> AND 
	emp.person_id LIKE '%6%'<!- - -->
		</query>
    </table>
    <table name="positions">
    	<id>UID,TYPE,DEPTID,STARTDATE</id>
    	<query>
SELECT 
	emp.person_id AS UID, 
	pos.type_id AS TYPE, 
	pos.dept_id AS DEPTID, 
	pos.start_date AS STARTDATE, 
	code.value AS WORKTITLE 
FROM job AS pos 
INNER JOIN person AS emp ON 
	pos.person_id = emp.person_id 
INNER JOIN type AS code ON 
	pos.type_id = code.type_id 
WHERE 
	pos.type_id IN (121,122,254,392,393) AND 
	emp.publish_ok = 1<!-- - -> AND 
	emp.person_id LIKE '%6%'<!- - -->
    	</query>
    </table>
    <table name="organizations">
    	<id>DEPTID</id>
    	<query>
SELECT 
	dept.dept_id AS DEPTID, 
	dept.dept_name AS NAME, 
	dept.type_id AS TYPE, 
	dept.super_dept_id AS SUPERDEPTID 
FROM department AS dept
    	</query>
    </table>
</Config>